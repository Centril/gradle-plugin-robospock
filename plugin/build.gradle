/*
 * Copyright 2014 toxbee.se
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def g = 'se.centril.robospock'
def v = '0.1.0'

ext.spock = [
		// Testing framework versions.
		spockVersion : '0.7-groovy-2.0',
		groovyVersion: '2.3.6',
		clibVersion  : '3.1',
		objenesisVersion: '2.1'
]

apply plugin: 'groovy'
apply plugin: 'idea'

group = g
version = v

/*
 * Setup gradle:
 */
task wrapper( type: Wrapper ) {
	gradleVersion = '2.10'
}

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:+'
	}
}

repositories {
	jcenter()
}

/*
 * Tasks for clearing:
 */
task cleanMaven( type: Delete ) { delete '../maven-deploy' }
task cleanOutput( type: Delete ) { delete 'classes' }
task cleanGradle( type: Delete ) { delete '.gradle' }
task cleanAll( dependsOn: [clean, cleanGradle, cleanMaven, cleanOutput, cleanIdea] ) {}
task c( dependsOn: cleanAll )

/*
 * Testing config:
 */
dependencies {
	compile gradleApi()
	compile localGroovy()
	compile 'com.android.tools.build:gradle:+'
	testCompile "org.codehaus.groovy:groovy-all:${spock.groovyVersion}"
	testCompile "org.spockframework:spock-core:${spock.spockVersion}"
	testCompile "cglib:cglib-nodep:${spock.clibVersion}"
	testCompile "org.objenesis:objenesis:${spock.objenesisVersion}"
}

/*
 * Publishing config:
 */
apply plugin: 'maven-publish'
build.finalizedBy publish

// sources.jar generation
task sourceJar( type: Jar ) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

// groovydoc.jar generation
task groovydocJar( type: Jar, dependsOn: groovydoc ) {
	classifier = 'groovydoc'
	from groovydoc.destinationDir
}

ext.mavenArtifacts = [sourceJar, groovydocJar]

publishing {
	repositories {
		maven {
			url uri( "../maven-deploy" )
		}
	}

	publications {
		maven( MavenPublication ) {
			from components.java

			mavenArtifacts.each { ar ->
				artifact( ar ) {
					classifier = ar.classifier
				}
			}

			def gitrepo = "centril/build-plugin-robospock.git"
			def giturl = "http://github.com/${gitrepo}"
			def gitconn = "scm:git:git@github.com:${gitrepo}"

			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'gradle-plugin-robospock'
					description 'gradle-plugin-robospock: build plugin for robospock setup.'
					url giturl
					scm {
						url giturl
						connection gitconn
						developerConnection gitconn
					}
					inceptionYear '2014'
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'Centril'
							name 'Mazdak Farrokhzad'
							email 'twingoow@gmail.com'
						}
					}
				}
			}
		}
	}
}

/*
 * Bintray config:
 *
bintray {
	// this usually comes form gradle.properties file in ~/.gradle
	user = bintrayUser
	key = bintrayKey

	// see publications closure
	publications = ['maven']
	pkg {
		repo = 'gradle-plugin-robospock'
		userOrg = 'toxbee'
		name = 'gradle-example'
		desc = 'Package created from gradle-example'
		licenses = ['Apache-2.0']
		labels = ['jfrog', 'samples']
	}
}
*/